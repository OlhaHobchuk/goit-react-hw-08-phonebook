{"version":3,"file":"static/js/854.5260d90a.chunk.js","mappings":"6PACA,EAAgC,iCAAhC,EAA6E,6BAA7E,EAAsH,6BAAtH,EAA+J,6BAA/J,EAA2M,gC,UCM9LA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAAVD,MAEFE,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHV,EAASW,GACT,MAEF,IAAK,WACHT,EAAYS,GACZ,MAEF,QACE,OAEL,EAEKC,EAAY,WAChBZ,EAAS,IACTE,EAAY,GACb,EAYD,OACE,gBAAKW,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAeC,SAbf,SAAAP,GAEnB,GADAA,EAAMQ,iBACFX,EAGF,OAFAY,IAAAA,OAAAA,QAAwB,oCACxBL,IAGFT,GAASe,EAAAA,EAAAA,IAAM,CAAEnB,MAAAA,EAAOE,SAAAA,KACxBW,GACD,EAIG,WACE,mBAAOC,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXK,KAAK,QACLT,KAAK,QACLU,YAAY,2BACZT,MAAOZ,EACPsB,SAAUd,EACVe,MAAM,qEACNC,UAAW,EACXC,UAAQ,QAGZ,mBAAOX,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXK,KAAK,WACLT,KAAK,WACLC,MAAOV,EACPoB,SAAUd,EACVa,YAAY,8BACZE,MAAM,uDACNC,UAAW,EACXC,UAAQ,QAGZ,mBAAQX,UAAWC,EAAkBK,KAAK,SAA1C,wBAMP,ECxED,EARc,WACZ,OACE,0BACE,SAACtB,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"LoginForm_formContainer__FPeRx\",\"loginForm\":\"LoginForm_loginForm__+koOR\",\"formTitle\":\"LoginForm_formTitle__xGeGl\",\"formInput\":\"LoginForm_formInput__kt+x6\",\"submitButton\":\"LoginForm_submitButton__-Yb3R\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { logIn } from '../../redux/user/operations';\nimport { useAuth } from '../../redux/user/selectors';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const { error } = useAuth();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setEmail('');\n    setPassword('');\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (error) {\n      Notiflix.Notify.warning('Please, autorized at first!');\n      formReset();\n      return;\n    }\n    dispatch(logIn({ email, password }));\n    formReset();\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <form className={css.loginForm} onSubmit={handleSubmit}>\n        <label className={css.formTitle}>\n          Email\n          <input\n            className={css.formInput}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Please, enter your email\"\n            value={email}\n            onChange={handleInputChange}\n            title=\"Please enter valid email address, for example  'example@gmail.com'\"\n            minLength={6}\n            required\n          />\n        </label>\n        <label className={css.formTitle}>\n          Password\n          <input\n            className={css.formInput}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            placeholder=\"Please, enter your password\"\n            title=\"Please enter your password. Minimum length 8 symbols\"\n            minLength={8}\n            required\n          />\n        </label>\n        <button className={css.submitButton} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","error","useAuth","handleInputChange","event","currentTarget","name","value","formReset","className","css","onSubmit","preventDefault","Notiflix","logIn","type","placeholder","onChange","title","minLength","required"],"sourceRoot":""}